name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Archive dist folder
        run: tar -czf dist.tar.gz dist

      - name: Prepare SSH
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
        run: |
          mkdir -p ~/.ssh
          echo -e "$SSH_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

          eval "$(ssh-agent -s)"
          echo "$SSH_PASSPHRASE" | ssh-add -k ~/.ssh/id_ed25519

          ssh-keygen -y -f ~/.ssh/id_ed25519 || {
            echo "Invalid SSH Ed25519 key format"
            exit 1
          }

      - name: Copy and Deploy to Server
        env:
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
        run: |
          set -e
          ssh-keyscan -p "$SSH_PORT" -H "$SERVER_IP" >> ~/.ssh/known_hosts

          sshpass -p "$SSH_PASSPHRASE" ssh \
              -i ~/.ssh/id_ed25519 \
              -p "$SSH_PORT" \
              -o StrictHostKeyChecking=no \
              -o UserKnownHostsFile=/dev/null \
              www@$SERVER_IP "hostname" || {
            echo "SSH connection failed"
            exit 1
          }

          sshpass -p "$SSH_PASSPHRASE" scp \
              -i ~/.ssh/id_ed25519 \
              -P "$SSH_PORT" \
              -o StrictHostKeyChecking=no \
              -o UserKnownHostsFile=/dev/null \
              dist.tar.gz www@$SERVER_IP:/var/www || {
            echo "File transfer failed"
            exit 1
          }

          sshpass -p "$SSH_PASSPHRASE" ssh \
              -i ~/.ssh/id_ed25519 \
              -p "$SSH_PORT" \
              -o StrictHostKeyChecking=no \
              -o UserKnownHostsFile=/dev/null \
              www@$SERVER_IP "
                cd /var/www &&
                tar -xzf dist.tar.gz &&
                sudo systemctl restart nginx
              " || {
            echo "Deployment or Nginx restart failed"
            exit 1
          }
